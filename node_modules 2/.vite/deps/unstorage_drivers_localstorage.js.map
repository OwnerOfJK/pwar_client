{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/unstorage@1.14.4_idb-keyval@6.2.1/node_modules/unstorage/drivers/localstorage.mjs"],
  "sourcesContent": ["import { createRequiredError, defineDriver, normalizeKey } from \"./utils/index.mjs\";\nconst DRIVER_NAME = \"localstorage\";\nexport default defineDriver((opts = {}) => {\n  const storage = opts.storage || opts.localStorage || opts.sessionStorage || (opts.window || globalThis.window)?.[opts.windowKey || \"localStorage\"];\n  if (!storage) {\n    throw createRequiredError(DRIVER_NAME, \"localStorage\");\n  }\n  const base = opts.base ? normalizeKey(opts.base) : \"\";\n  const r = (key) => (base ? `${base}:` : \"\") + key;\n  let _storageListener;\n  const _unwatch = () => {\n    if (_storageListener) {\n      opts.window?.removeEventListener(\"storage\", _storageListener);\n    }\n    _storageListener = void 0;\n  };\n  return {\n    name: DRIVER_NAME,\n    options: opts,\n    getInstance: () => storage,\n    hasItem(key) {\n      return Object.prototype.hasOwnProperty.call(storage, r(key));\n    },\n    getItem(key) {\n      return storage.getItem(r(key));\n    },\n    setItem(key, value) {\n      return storage.setItem(r(key), value);\n    },\n    removeItem(key) {\n      return storage.removeItem(r(key));\n    },\n    getKeys() {\n      const allKeys = Object.keys(storage);\n      return base ? allKeys.filter((key) => key.startsWith(`${base}:`)).map((key) => key.slice(base.length + 1)) : allKeys;\n    },\n    clear(prefix) {\n      const _base = [base, prefix].filter(Boolean).join(\":\");\n      if (_base) {\n        for (const key of Object.keys(storage)) {\n          if (key.startsWith(`${_base}:`)) {\n            storage?.removeItem(key);\n          }\n        }\n      } else {\n        storage.clear();\n      }\n    },\n    dispose() {\n      if (opts.window && _storageListener) {\n        opts.window.removeEventListener(\"storage\", _storageListener);\n      }\n    },\n    watch(callback) {\n      if (!opts.window) {\n        return _unwatch;\n      }\n      _storageListener = (ev) => {\n        if (ev.key) {\n          callback(ev.newValue ? \"update\" : \"remove\", ev.key);\n        }\n      };\n      opts.window.addEventListener(\"storage\", _storageListener);\n      return _unwatch;\n    }\n  };\n});\n"],
  "mappings": ";;;;;;;;AACA,IAAM,cAAc;AACpB,IAAO,uBAAQ,aAAa,CAAC,OAAO,CAAC,MAAM;AACzC,QAAM,UAAU,KAAK,WAAW,KAAK,gBAAgB,KAAK,mBAAmB,KAAK,UAAU,WAAW,UAAU,KAAK,aAAa,cAAc;AACjJ,MAAI,CAAC,SAAS;AACZ,UAAM,oBAAoB,aAAa,cAAc;AAAA,EACvD;AACA,QAAM,OAAO,KAAK,OAAO,aAAa,KAAK,IAAI,IAAI;AACnD,QAAM,IAAI,CAAC,SAAS,OAAO,GAAG,IAAI,MAAM,MAAM;AAC9C,MAAI;AACJ,QAAM,WAAW,MAAM;AACrB,QAAI,kBAAkB;AACpB,WAAK,QAAQ,oBAAoB,WAAW,gBAAgB;AAAA,IAC9D;AACA,uBAAmB;AAAA,EACrB;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa,MAAM;AAAA,IACnB,QAAQ,KAAK;AACX,aAAO,OAAO,UAAU,eAAe,KAAK,SAAS,EAAE,GAAG,CAAC;AAAA,IAC7D;AAAA,IACA,QAAQ,KAAK;AACX,aAAO,QAAQ,QAAQ,EAAE,GAAG,CAAC;AAAA,IAC/B;AAAA,IACA,QAAQ,KAAK,OAAO;AAClB,aAAO,QAAQ,QAAQ,EAAE,GAAG,GAAG,KAAK;AAAA,IACtC;AAAA,IACA,WAAW,KAAK;AACd,aAAO,QAAQ,WAAW,EAAE,GAAG,CAAC;AAAA,IAClC;AAAA,IACA,UAAU;AACR,YAAM,UAAU,OAAO,KAAK,OAAO;AACnC,aAAO,OAAO,QAAQ,OAAO,CAAC,QAAQ,IAAI,WAAW,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,IAAI;AAAA,IAC/G;AAAA,IACA,MAAM,QAAQ;AACZ,YAAM,QAAQ,CAAC,MAAM,MAAM,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG;AACrD,UAAI,OAAO;AACT,mBAAW,OAAO,OAAO,KAAK,OAAO,GAAG;AACtC,cAAI,IAAI,WAAW,GAAG,KAAK,GAAG,GAAG;AAC/B,qBAAS,WAAW,GAAG;AAAA,UACzB;AAAA,QACF;AAAA,MACF,OAAO;AACL,gBAAQ,MAAM;AAAA,MAChB;AAAA,IACF;AAAA,IACA,UAAU;AACR,UAAI,KAAK,UAAU,kBAAkB;AACnC,aAAK,OAAO,oBAAoB,WAAW,gBAAgB;AAAA,MAC7D;AAAA,IACF;AAAA,IACA,MAAM,UAAU;AACd,UAAI,CAAC,KAAK,QAAQ;AAChB,eAAO;AAAA,MACT;AACA,yBAAmB,CAAC,OAAO;AACzB,YAAI,GAAG,KAAK;AACV,mBAAS,GAAG,WAAW,WAAW,UAAU,GAAG,GAAG;AAAA,QACpD;AAAA,MACF;AACA,WAAK,OAAO,iBAAiB,WAAW,gBAAgB;AACxD,aAAO;AAAA,IACT;AAAA,EACF;AACF,CAAC;",
  "names": []
}
